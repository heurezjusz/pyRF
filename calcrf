#!/usr/bin/python3

import config
import os

# parsing arguments
import argparse
parser = argparse.ArgumentParser()

parser.add_argument('data_catalog', type=str,
        help='name of a catalog with data')

args = parser.parse_args()


def stop():
    return 1 / 0

# program itself
from core import output_filename, rotate_theoretical, rotate_search, calculate_rf, cut
from external import collect_data


from obspy import read
path = vars(args)['data_catalog']

for filename in os.listdir(path):
    if config.VERBOSITY >= 1:
        print ( filename )

    # reading file
    data = read(path + '/' + filename)
    if config.PLOT_DATA_FROM_FILE: data.plot()
    
    data = cut(data)
    if config.SAVE_CUT:
        data.write(output_filename(filename, prefix='cut_'), config.SAVE_FORMAT)
    if config.PLOT_CUT: data.plot()

    if config.MODE == "theoretical":
        data = rotate_theoretical(data, filename)
    elif config.MODE == "search":
        data = rotate_search(data)
    else:
        raise NotImplementedError

    if config.SAVE_ROTATED:
        data.write(output_filename(filename, prefix='rotated_'), config.SAVE_FORMAT)
    if config.PLOT_ROTATED: data.plot()

    data = calculate_rf(data, zero_shift=config.RF_SHIFT)

    if config.SAVE_RF:
        data.write(output_filename(filename, prefix='rf_'), config.SAVE_FORMAT)
    if config.PLOT_RF:
        data.plot()
